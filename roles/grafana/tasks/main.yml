---
- name: Create installation directory
  become: true
  when: install_type == "archive"
  file:
    path: "{{ install_dir }}"
    state: directory
  tags:
    - install

- name: Download Grafana archive ({{ archive_url }})
  become: true
  when: install_type == "archive"
  get_url:
    url: "{{ archive_url }}"
    dest: "/tmp/{{ archive_url | urlsplit('path') | basename }}"
    checksum: "{{ (archive_checksum|length > 0) | ternary(checksum_format+':'+archive_checksum, '') }}"
    mode: '0775'
    force: '{{ force }}'
  register: archive_tmp
  tags:
    - install

- name: Extract Grafana archive
  become: true
  when: install_type == "archive"
  unarchive:
    src: "{{ archive_tmp.dest }}"
    dest: "{{ install_dir }}"
    mode: '0775'
    remote_src: true
    extra_opts:
      - --strip-components
      - '1'
  tags:
    - install

- name: Copy Grafana configuration in place
  become: true
  when: install_type == "archive"
  template:
    src: "{{ grafana_config_file }}.j2"
    dest: "{{ install_dir }}/conf/{{ grafana_config_file }}"
    force: true
  tags:
    - install
    - start
    - restart
    - update

- name: Add Scripts
  template:
    src: 'templates/{{ item }}'
    dest: '{{ install_dir }}/scripts/'
    mode: '0775'
  loop:
    - 'start.sh'
    - 'stop.sh'
    - 'restart.sh'

  tags:
    - install
    - start
    - stop
    - restart


- name: Start Grafana server
  become: true
  shell: '{{ install_dir }}/scripts/start.sh'
  tags:
    - install
    - start

- name: Stop Grafana server
  become: true
  shell: '{{ install_dir }}/scripts/stop.sh'
  tags:
    - stop
    - uninstall

- name: Restart Grafana server
  become: true
  shell: '{{ install_dir }}/scripts/restart.sh'
  tags:
    - restart

- name: Uninstall Grafana server
  become: true
  shell: 'rm -rf {{ install_dir }}'
  tags:
    - uninstall

- name: Include Datasources
  include: "datasources.yml"

- name: Include Dashboards
  include: "dashboards.yml"